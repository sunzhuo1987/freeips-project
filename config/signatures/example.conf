#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature3"; flow:established,from_client; content: "woop"; classtype: policy-violation; sid:2002170; rev:1; depth: 10;offset 2;)
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature1"; flow:established,from_client; content: "woop"; classtype: policy-violation; sid:2002170; rev:1; offset: 2000;)
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature3"; flow:established,from_client; content: "woop"; classtype: policy-violation; sid:2002170; rev:1; offset: 20;)
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature4"; flow:established,from_client; content: "woop"; content: "waap";classtype: policy-violation; sid:2002170; rev:1;)
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature4"; flow:established,from_client; content: "woop"; content: "waap"; distance: 1;classtype: policy-violation; sid:2002170; rev:1;)

#alert tcp $EXTERNAL_NET any -> $HOME_NET 3128 (msg:"Simple test"; content: "ANTI_test"; classtype: policy-violation; sid:6666; rev:1;)

##
## This will test the 'within' option
##
## Success:  echo "woop    waap" | nc 192.168.0.122 443
## Failure:  echo "woop     waap" | nc 192.168.0.122 443
##
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature4"; flow:established,from_client; content: "woop"; content: "waap"; within: 4;classtype: policy-violation; sid:2002170; rev:1;)


##
## This will test the 'distance' option
##
## Success:  echo "woop    waap" | nc 192.168.0.122 443
## Failure:  echo "woop     waap" | nc 192.168.0.122 443
## Failure:  echo "woop   waap" | nc 192.168.0.122 443
##
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature4"; flow:established,from_client; content: "woop"; content: "waap"; distance: 4;classtype: policy-violation; sid:2002170; rev:1;)

##
## This will test the 'distance' option
##
## Success:  echo "woop    waap" | nc 192.168.0.122 443
## Success:  echo "wOOp    waap" | nc 192.168.0.122 443
##
#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature4"; flow:established,from_client; content: "woop"; nocase; content: "waap"; distance: 4;classtype: policy-violation; sid:2002170; rev:1;)

##
## This will test the ! option
##
## Success: echo "woop    woop" | nc 192.168.0.122 443
## Failure: echo "woop    waap" | nc 192.168.0.122 443

#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature4"; flow:established,from_client; content: "woop"; content: !"waap"; distance: 4;classtype: policy-violation; sid:2002170; rev:1;)

##
## PCRE example
##
##
## Success: echo "woop" | nc 192.168.0.122 443

#alert tcp $EXTERNAL_NET any -> $HOME_NET 443 (msg:"Test signature3"; flow:established,from_client; pcre: "/w[a-z]{2}p/i"; classtype: policy-violation; sid:2002170; rev:1; )

##
##
## TCP flags example
###
#alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"Test signature3"; flow:established,from_client; pcre: "/w[a-z]{2}p/i"; flags: SF,12;  classtype: policy-violation; sid:2002170; rev:1; )
#alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"Test signature3"; flags: PA,12;  classtype: policy-violation; sid:2002170; rev:1; )

#isdataat
#
# Success:  echo "woop        " | nc 192.168.0.122 443 
# Failure:  echo "woop   " | nc 192.168.0.122 443 
#
#alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"Test signature3"; content:"woop"; isdataat:10,relative;  classtype: policy-violation; sid:2002170; rev:1; )




#alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"Test signature3"; content:"woop"; replace:"waap"; action:"pass"; classtype: policy-violation; sid:2002170; rev:1; )


# uricontent test
#
#
#
alert tcp $EXTERNAL_NET any -> $HOME_NET any (msg:"Test uricontent"; uricontent:"woop"; action:"pass"; dsize:123; classtype: policy-violation; sid:2002170; rev:1; )

